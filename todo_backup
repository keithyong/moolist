--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: todo; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE todo (
    id integer NOT NULL,
    text text,
    completed boolean DEFAULT false
);


ALTER TABLE public.todo OWNER TO postgres;

--
-- Name: todo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE todo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.todo_id_seq OWNER TO postgres;

--
-- Name: todo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE todo_id_seq OWNED BY todo.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY todo ALTER COLUMN id SET DEFAULT nextval('todo_id_seq'::regclass);


--
-- Data for Name: todo; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY todo (id, text, completed) FROM stdin;
23	make it work on touch	f
21	clean up the code	f
9	implement a front end for creating a new TODO item	t
5	bind db and redux	t
7	make sure the client.js file works	t
18	fix the add todo button	t
15	Implement complete todo action	t
11	Clean boots and prep it for snow day	f
17	implement global todo list sorting	t
40	Hello world	t
41	find wallet	f
20	clean up the input field on submission	t
22	show shawn todo list	t
38	Give new items in store an ID on ADD_TODO	t
6	fix GET hanging in server	t
12	sell HyperX headphones on eBay	f
10	buy Machine Learning - An Algorithmic Perspective textbook	t
13	sort the list by finished and unfinished	t
8	make sure dispatching works	t
14	Implement server POST on ADD_TODO action	t
19	implement time tracking for TODO on the database	t
\.


--
-- Name: todo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('todo_id_seq', 41, true);


--
-- Name: todo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY todo
    ADD CONSTRAINT todo_pkey PRIMARY KEY (id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

